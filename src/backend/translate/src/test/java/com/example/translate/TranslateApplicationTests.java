package com.example.translate;

import static org.junit.Assert.assertEquals;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.result.MockMvcResultHandlers;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import static org.junit.Assert.assertTrue;
import static org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.springSecurity;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@RunWith(SpringRunner.class)
@SpringBootTest
public class TranslateApplicationTests {

	@Autowired
	private WebApplicationContext context;
	private MockMvc mvc;
	private String testPictureBase64 = "";

	@Before
	public void setup(){
		mvc = MockMvcBuilders.webAppContextSetup(context).build();;
	}

	@WithMockUser(roles={"ADMIN"})
	@Test
	public void testTranslateText() throws Exception {
		mvc.perform(post("/translate/text").contentType(MediaType.APPLICATION_JSON)
				.param("id", "1")
				.param("from", "auto")
				.param("to", "zh-CHS")
				.param("sentence", "a"))
				.andExpect(status().isOk());
	}


	@Test
	public void testTranslatePicture() throws Exception {
		mvc.perform(post("/translate/photo").contentType(MediaType.APPLICATION_JSON)
				.param("id", "1")
				.param("from", "en")
				.param("to", "zh-CHS")
				.param("picture", testPictureBase64))
				.andExpect(status().is(200));
	}

	@Test
	public void testTranslateAudio() throws Exception {
		mvc.perform(post("/translate/voice").contentType(MediaType.APPLICATION_JSON)
				.param("id", "1")
				.param("from", "en")
				.param("to", "zh-CHS")
				.param("voice", "test"))
				.andExpect(status().is(200));
	}

	@Test
	public void testTranslator() throws Exception {
		mvc.perform(post("/translator/getjob").contentType(MediaType.APPLICATION_JSON))
				.andExpect(status().isOk());
		mvc.perform(post("/translator/setjob").contentType(MediaType.APPLICATION_JSON)
				.param("id", "1")
				.param("text", "translate this"))
				.andExpect(status().isOk());
		mvc.perform(post("/translator/sendresult").contentType(MediaType.APPLICATION_JSON)
				.param("result", "翻译")
				.param("textId", "144")
				.param("translatorId", "1"))
				.andExpect(status().isOk());
		mvc.perform(get("/translator/refresh/1").contentType(MediaType.APPLICATION_JSON))
				.andExpect(status().isOk());
		mvc.perform(post("/translator/registertranslator").contentType(MediaType.APPLICATION_JSON)
				.param("name", "hellotest3"))
				.andExpect(status().isOk());
	}

	@Test
	public void testOther() throws Exception {
		mvc.perform(post("/translate/pichit/1").contentType(MediaType.APPLICATION_JSON))
				.andExpect(status().isOk());
		mvc.perform(post("/translate/texthis/1").contentType(MediaType.APPLICATION_JSON))
				.andExpect(status().isOk());
		mvc.perform(post("/translate/voichis/1").contentType(MediaType.APPLICATION_JSON))
				.andExpect(status().isOk());
		mvc.perform(get("/").contentType(MediaType.APPLICATION_JSON))
				.andExpect(status().isOk());
	}

//	@Test
//	public void testSayHello(){
//
//		//Creating a spy instance of the EventLogger here.
//		MyEventLogger logger = Mockito.spy(MyEventLogger.class);
//
//		//Passing the spy instance here to the constructor.
//		Greeting greeting = new Greeting(logger);
//
//		//Telling the spy instance to return true in every case without executing the real method.
//		doReturn(true).when(logger).writeEvent(anyString());
//
//		//Calling the method to be tested.
//		greeting.sayHello("John");
//	}

}